name: Add Epics to Roadmap

on:
  workflow_dispatch:
  issues:
    types: [opened, labeled]

jobs:
  add_epic_to_roadmap:
    if: ${{ vars.AUTOMATION_ENABLED == '1' && github.event.issue != null && (contains(github.event.issue.labels.*.name, 'epic') || (github.event.action == 'labeled' && github.event.label.name == 'epic')) }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Resolve user project ID (Roadmap)
        id: proj
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PROJECT_TOKEN }}
          script: |
            const login = process.env.ORG_LOGIN;
            const number = parseInt(process.env.ORG_ROADMAP_NUMBER, 10);
            const q = `query($login:String!, $number:Int!){
              user(login:$login){
                projectV2(number:$number){ id }
              }
            }`;
            const r = await github.graphql(q, { login, number });
            if (!r.user?.projectV2?.id) {
              core.setFailed(`Roadmap project not found for user ${login} #${number}`);
              return;
            }
            core.setOutput('projectId', r.user.projectV2.id);

      - name: Add issue to Roadmap
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ORG_PROJECT_TOKEN }}
          script: |
            const projectId = '${{ steps.proj.outputs.projectId }}';
            const contentId = '${{ github.event.issue.node_id }}';
            const m = `mutation($projectId:ID!, $contentId:ID!){
              addProjectV2ItemById(input:{projectId:$projectId, contentId:$contentId}){ item { id } }
            }`;
            await github.graphql(m, { projectId, contentId });
    env:
      ORG_LOGIN: ${{ vars.ORG_LOGIN }}
      ORG_ROADMAP_NUMBER: ${{ vars.ORG_ROADMAP_NUMBER }}
